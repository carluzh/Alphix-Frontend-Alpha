{
  "permissions": {
    "allow": [
      "Bash(curl -X POST \"https://subgraph.satsuma-prod.com/59826817594f/layanss-team--533867/marinita/api\" -H \"Content-Type: application/json\" -d \"{\"\"query\"\":\"\"{ __type(name: \\\"\"AlphixHook\\\"\") { fields { name type { name kind ofType { name kind } } } } }\"\"}\")",
      "Bash(cat:*)",
      "Bash(curl -X POST \"https://subgraph.satsuma-prod.com/59826817594f/layanss-team--533867/marinita/api\" -H \"Content-Type: application/json\" -d \"{\"\"query\"\":\"\"{ __schema { queryType { fields { name description } } } }\"\"}\")",
      "Bash(curl -X POST \"https://subgraph.satsuma-prod.com/59826817594f/layanss-team--533867/marinita/api\" -H \"Content-Type: application/json\" -d \"{\"\"query\"\":\"\"{ __type(name: \\\"\"Pool\\\"\") { fields { name type { name kind ofType { name kind } } } } }\"\"}\")",
      "Bash(curl -X POST \"https://subgraph.satsuma-prod.com/59826817594f/layanss-team--533867/marinita/api\" -H \"Content-Type: application/json\" -d \"{\"\"query\"\":\"\"{ __type(name: \\\"\"PoolDayData\\\"\") { fields { name type { name kind ofType { name kind } } } } }\"\"}\")",
      "Bash(curl:*)",
      "Bash(npx ts-node:*)",
      "Bash(npx tsx:*)",
      "Bash(python3:*)",
      "Bash(tree:*)",
      "Bash(mkdir:*)",
      "Bash(git mv:*)",
      "Bash(find:*)",
      "Bash(awk:*)",
      "Bash(for dir in */)",
      "Bash(done)",
      "Bash(sort:*)",
      "Bash(ls:*)",
      "Bash(for file in \"version-log.ts\" \"prefetch-service.ts\" \"subgraph-url-helper.ts\" \"rpcClient.ts\")",
      "Bash(do echo -n \"$file: \")",
      "Bash(for dir in components/*/)",
      "Bash(for file in \"site-header\" \"nav-user\" \"section-cards\")",
      "Bash(do echo \"=== $file ===\")",
      "Bash(npm run build:*)",
      "Bash(npm run test:run:*)",
      "Bash(node:*)",
      "Bash(npx tsc:*)",
      "Bash(npx playwright test:*)",
      "Bash(./run-e2e-tests.sh:*)",
      "Bash(timeout:*)",
      "Bash(tee:*)",
      "Bash(pkill:*)",
      "Bash(cd:*)",
      "Bash(npm run test:*)",
      "Bash(bash:*)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(for var in \"isPanning\" \"isDraggingRange\" \"dragStartX\" \"dragStartTickLower\" \"dragStartTickUpper\" \"dragSide\" \"editingSide\" \"customXAxisTicks\" \"editingMinPrice\" \"editingMaxPrice\" \"showPresetSelector\")",
      "Bash(for ref in \"panStartXRef\" \"panStartDomainRef\" \"chartContainerRef\" \"prevCalculationDeps\")"
    ],
    "deny": [],
    "ask": []
  }
}
